qualified_type_name: aws:ecs_task_definition
display_name: ECS Task Definition

properties:
  Cpu:
    type: string
    default_value: '256'
    description: The number of CPU units reserved for the task
  Memory:
    type: string
    default_value: '512'
    description: The hard limit (in MiB) of memory to present to the task
  ContainerDefinitions:
    default_value:
      - Name: '{{ .Self.Name }}'
    type: list
    properties:
      Command:
        type: list(string)
        description: The command that is passed to the container
      Cpu:
        type: int
        default_value: 256
        description: The number of CPU units reserved for the container
      DependsOn:
        type: list
        properties:
          Condition:
            type: string
            description: The dependency condition of the container
            allowed_values:
              - START
              - COMPLETE
              - SUCCESS
              - HEALTHY
          ContainerName:
            type: string
            description: The name of the container to depend on
        description: The dependencies defined for container startup and shutdown
      EntryPoint:
        type: list(string)
        description: The entry point that is passed to the container
      Environment:
        type: list
        properties:
          Name:
            type: string
            sanitize: |
              {{ .
                | replace `[^[:alnum:]_]+` "_"
                | replace `^[^a-zA-Z]+` ""
                | upper
              }}
            description: The name of the environment variable
          Value:
            type: string
            description: The value of the environment variable
        description: The environment variables to pass to a container
      Essential:
        type: bool
        default_value: true
        description: If the essential parameter of a container is marked as true, and
          that container fails or stops for any reason, all other containers that
          are part of the task are stopped
      Image:
        type: resource(aws:ecr_image)
        required: true
        operational_rule:
          step:
            direction: downstream
            resources:
              - aws:ecr_image:{{ .Self.Name }}-{{ if pathAncestorExists .Path 1}}{{ if hasField (printf "%s.Name" (pathAncestor .Path 1)) .Self}}{{ fieldValue (printf "%s.Name" (pathAncestor .Path 1)) .Self}}{{else}}image{{end}}{{else}}image{{end}}
            unique: true
        description: Reference to an Amazon Elastic Container Registry (ECR) image that
          will be used for the container within the task
      LogConfiguration:
        type: map
        properties:
          LogDriver:
            type: string
            description: The log driver to use for the container
            default_value: awslogs
          Options:
            type: map(string,string)
            description: The configuration options to send to the log driver
            properties:
              awslogs-group:
                type: string
                description: The log group to send stdout to
                operational_rule:
                  step:
                    direction: downstream
                    resources:
                      - aws:log_group:{{ .Self.Name }}-log-group
                    unique: true
                    use_property_ref: LogGroupName
              awslogs-region:
                type: string
                description: The region which your log group will exist in
                default_value: '{{ fieldRef "Name" (downstream "aws:region" (upstream "aws:ecs_service" .Self)) }}'
              awslogs-stream-prefix:
                type: string
                description: The prefix to use when creating the log stream
                default_value: '{{ .Self.Name }}{{ if hasField (printf "%s.Name" (pathAncestor .Path 3)) .Self}}-{{ fieldValue (printf "%s.Name" (pathAncestor .Path 3)) .Self }}{{else}}{{end}}'
          SecretOptions:
            type: list
            properties:
              Name:
                type: string
                description: The name of the secret
              ValueFrom:
                type: string
                description: The secret to expose to the container
            description: The secrets to pass to the log configuration
        description: The log configuration specification for the container
      Memory:
        type: int
        default_value: 512
        description: The hard limit (in MiB) of memory to present to the container
      MountPoints:
        type: set
        properties:
          ContainerPath:
            type: string
            description: The path on the container to mount the volume at
          SourceVolume:
            type: string
            description: The name of the volume to mount
          ReadOnly:
            type: bool
            description: Determines if the volume should be mounted as read-only
        description: A list of mount points for data volumes in your container
      Name:
        type: string
        description: The name of the container
      PortMappings:
        type: list
        important: true
        default_value:
          - ContainerPort: 80
            HostPort: 80
            Protocol: TCP
        properties:
          ContainerPort:
            type: int
            description: The port number on the container
          HostPort:
            type: int
            description: The port number on the host where the container is exposed
          Protocol:
            type: string
            description: The protocol used for the port mapping, such as TCP or UDP
        description: A set of port mappings between the container and host

      
      
      
  ExecutionRole:
    type: resource(aws:iam_role)
    operational_rule:
      step:
        direction: downstream
        resources:
          - aws:iam_role:{{ .Self.Name }}-execution-role
        unique: true
    description: The IAM role that allows Amazon ECS to make calls to AWS APIs on
      your behalf
  TaskRole:
    type: resource(aws:iam_role)
    default_value: '{{ fieldValue "ExecutionRole" .Self }}'
    description: The IAM role that determines the permissions for making AWS API calls
      from within the ECS task
  NetworkMode:
    type: string
    default_value: awsvpc
    description: The Docker networking mode to use for the containers in the task
  RequiresCompatibilities:
    type: list(string)
    default_value:
      - FARGATE
    description: A list of launch types required by the task
  EfsVolumes:
    type: set
    properties:
      Name:
        type: string
        description: The name of the volume, used as a reference within the task definition
      FileSystem:
        type: resource(aws:efs_file_system)
        description: The Amazon EFS file system ID to use
      RootDirectory:
        type: string
        description: The directory within the Amazon EFS file system to mount as the
          root directory inside the host
      TransitEncryption:
        type: string
        description: Whether to enable in-transit encryption for the EFS volume's
          data
      TransitEncryptionPort:
        type: int
        description: The port to use for transit encryption of the EFS volume
      AuthorizationConfig:
        type: map
        properties:
          AccessPoint:
            type: resource(aws:efs_access_point)
            description: The access point to use to mount the EFS file system
          Iam:
            type: string

            description: Whether or not to use IAM authorization for access to the
              EFS volume
        description: The authorization configuration details for the EFS volume
    description: An array of Amazon Elastic File System (EFS) volumes to be attached
      to containers
  
consumption:
  consumed:
    - model: EnvironmentVariables
      property_path: ContainerDefinitions[0].Environment
      converter: |
        [
        {{ $i := 0}}
        {{ range $key, $value := . }}
          {
            "Name": "{{ $key }}",
            "Value": "{{ $value }}"
          }{{if ne $i (sub (len $) 1)}},{{end}}{{ $i = add $i 1 }}
        {{ end }}
        ]

delete_context:
  requires_no_upstream: true
views:
  dataflow: small
